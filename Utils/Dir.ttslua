Dir = { class   = "Dir"
      , dir     = nil
      , __eq    = function(other) return self.dir == other.dir end
      }

North = { dir = 1 }
East  = { dir = 2 }
South = { dir = 3 }
West  = { dir = 4 }

function Dir:declareType()    -- Set things for elements to be of this type
    Dir.__index = Dir
    setmetatable(North, Dir)
    setmetatable(East , Dir)
    setmetatable(South, Dir)
    setmetatable(West , Dir)
end
Dir:declareType()             -- This is needed after the declaration

function Dir:isNorth() return self.dir==1 end
function Dir:isEast()  return self.dir==2 end
function Dir:isSouth() return self.dir==3 end
function Dir:isWest()  return self.dir==4 end

function Dir:case(n,e,s,w)
    if self==nil          then return nil
    elseif self:isNorth() then return n
    elseif self:isEast()  then return e
    elseif self:isSouth() then return s
    elseif self:isWest()  then return w
    else   self:abstractionViolation()
    end
end

function Dir:show()                 print(self:case("North", "East", "South", "West"))   end
function Dir:abstractionViolation() error ("Bad Direction: messed with representation?") end

function Dir:next()
    self.dir = 1 + (self.dir % 4)
    return self
end

function Dir:prev()
    self.dir = 1 + ((self.dir + 2) % 4)
    return self
end
